name: Blo main workflow

on:
  push:
    branch: 'develop'

jobs:
  build:
    name: CI
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        ports:
          - 6379:6379

    env:
      GITHUB_TOKEN: ${{ secrets.TOKEN }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_URL: ${{ secrets.DB_URL }}
      JWT_HEADER: ${{ secrets.JWT_HEADER }}
      JWT_PREFIX: ${{ secrets.JWT_PREFIX }}
      JWT_ACCESS_TOKEN_EXP: ${{ secrets.JWT_ACCESS_TOKEN_EXP }}
      JWT_REFRESH_TOKEN_EXP: ${{ secrets.JWT_REFRESH_TOKEN_EXP }}
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Mysql - start mysql
        uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3306
          container port: 3306
          mysql database: 'blo'
          mysql user: ${{ secrets.DB_USERNAME }}
          mysql password: ${{ secrets.DB_PASSWORD }}

      - name: Build - jdk set up to 17
        uses: actions/setup-java@v3
        if: ${{ !contains(github.event.head_commit.message, '!!') }}
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Build - gradlew
        run: chmod +x gradlew
        if: ${{ !contains(github.event.head_commit.message, '!!') }}

      - name: Build - build gradle
        run: ./gradlew --warning-mode=all --info build
        if: ${{ !contains(github.event.head_commit.message, '!!') }}

      - name: Git - remote update
        run: git remote update

      - name: Git - change branch to 'develop'
        run: git checkout develop

      - name: Git - pull in 'develop' branch
        run: git pull origin develop

      - name: Git - change branch to 'main'
        run: git checkout main

      - name: Git - pull in 'main' branch
        run: git pull origin main

      - name: Git - set email
        run: git config --global user.email $EMAIL
        env:
          EMAIL: ${{ secrets.EMAIL }}

      - name: Git - set name
        run: git config --global user.name $NAME
        env:
          NAME: ${{ secrets.NAME }}

      - name: Git - merge 'develop' to 'main' branch
        run: git merge -X theirs --allow-unrelated-histories -m "Auto merge by Github Action" develop

      - name: Git - push 'main' branch
        run: git push